"""
An simple file getter entry for chainer model.

@author: FATESAIKOU
@date  : 16/11/2018
"""

from .Interfaces.Ethernet import Scp, Ftp
from .Interfaces.Bluetooth import Obexftp

from .Policies.EzPolicy import DummyPolicy
from .Policies.BasicRL import VeryFirstPolicy as VFRL
from .Policies.SoftmaxRL import SoftmaxPolicy as Softmax

interface_selector = { "Scp": Scp, "Ftp": Ftp, "Bluetooth": Obexftp }
policy_selector = {"Dummy": DummyPolicy, "VFRL": VFRL, "Softmax": Softmax}

class ModelGetter:
    def __init__( self, interface_descriptors, policy_descriptor ):
        # init interfaces
        self.__communicators__ = []
        for if_desc in interface_descriptors:
            if_info = if_desc.split(',')
            if_comm = interface_selector[ if_info[0] ]( *if_info[1:] )

            self.__communicators__.append(if_comm)

        # init policy with profiles generated by communicators
        self.__policy_agent__ = policy_selector[ policy_descriptor ](self.__communicators__)

    def GetModel( self, model_name ):
        # check file existence
        ava_comms = []
        filesize = 0
        for comm in self.__communicators__:
            fs = comm.GetFileInfo(model_name)

            if fs is not None:
                ava_comms.append(comm.GetName())
                filesize =fs

        # if no such model available return None
        if len(ava_comms) == 0:
            return float('nan')
        print(ava_comms)
        # policy select communicator
        target_comm = self.__policy_agent__.Select(ava_comms, filesize)

        # do get file
        report = target_comm.GetFile(model_name)

        # update policy
        self.__policy_agent__.Update(target_comm.GetName(), report)

        return report[model_name][1]
